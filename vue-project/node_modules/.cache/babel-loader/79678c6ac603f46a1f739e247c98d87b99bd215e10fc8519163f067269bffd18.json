{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    id: \"naverIdLogin\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","id","type","onClick","_cache","args","$options","logout"],"sources":["C:\\Users\\cau\\Desktop\\Workspace\\vue\\vue-project\\src\\views\\NaverLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"naverIdLogin\"></div>\r\n    <button type=\"button\" @click=\"logout\">로그아웃</button>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      naverLogin: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: \"CoFMDuiNQCSt4spL8LEA\", //개발자센터에 등록한 ClientID\r\n      callbackUrl: \"http://localhost:8080/naverlogin\", //개발자센터에 등록한 callback Url\r\n      isPopup: false, //팝업을 통한 연동처리 여부\r\n      loginButton: { color: \"green\", type: 3, height: 60 }, //로그인 버튼의 타입을 지정\r\n    });\r\n\r\n    //설정정보를 초기화하고 연동을 준비\r\n    this.naverLogin.init();\r\n\r\n    this.naverLogin.getLoginStatus((status) => {\r\n      if (status) {\r\n        console.log(status);\r\n        console.log(this.naverLogin.user);\r\n\r\n        //필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크\r\n        var email = this.naverLogin.user.getEmail();\r\n        if (email == undefined || email == null) {\r\n          alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\r\n          //사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함\r\n          this.naverLogin.reprompt();\r\n          return;\r\n        }\r\n      } else {\r\n        console.log(\"callback 처리에 실패하였습니다.\");\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    logout() {\r\n      const accessToken = this.naverLogin.accessToken.accessToken;\r\n      const url = `/oauth2.0/token?grant_type=delete&client_id=zFcLWPMTcDQTNTB6iIOy&client_secret=bUW7FZMpS9&access_token=${accessToken}&service_provider=NAVER`;\r\n\r\n      axios.get(url).then((res) => {\r\n        console.log(res.data);\r\n      });\r\n\r\n      //https://nid.naver.com/oauth2.0/token?grant_type=delete&client_id=zFcLWPMTcDQTNTB6iIOy&client_secret=bUW7FZMpS9&access_token=AAAAOOCeX4fAa_NxKPAmJW8C1UeLxGT3nM0wRV33irhyHyRua1JJrfrp0jZwfbOD0r502Id9mbhb0YiA9_NvCXGAwws&service_provider=NAVER\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAGM,c,0BAFJC,mBAAA,CAA6B;IAAxBC,EAAE,EAAC;EAAc,6BACtBD,mBAAA,CAAmD;IAA3CE,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}