{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.setCount(100))\n  }, \"set\"), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"100 생성 \" + _toDisplayString($data.counter), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","onClick","_cache","$event","$options","setCount","_toDisplayString","$data","counter"],"sources":["C:\\Users\\cau\\Desktop\\Workspace\\vue\\vue-project\\src\\views\\EventClick.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button type=\"button\" @click=\"setCount(100)\">set</button>\r\n    <br />\r\n    <span>100 생성 {{ counter }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      counter: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    setCount(counter) {\r\n      this.counter += counter;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;uBACEA,mBAAA,CAIM,cAHJC,mBAAA,CAAyD;IAAjDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;KAAO,KAAG,G,0BAChDN,mBAAA,CAAM,sCACNA,mBAAA,CAAiC,cAA3B,SAAO,GAAAO,gBAAA,CAAGC,KAAA,CAAAC,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}