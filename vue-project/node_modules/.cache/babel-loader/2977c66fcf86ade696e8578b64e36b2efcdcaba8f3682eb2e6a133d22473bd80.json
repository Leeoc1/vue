{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      naverLogin: null,\n      isLoggedIn: false\n    };\n  },\n  mounted() {\n    this.initializeNaverLogin();\n    this.checkCallback();\n  },\n  methods: {\n    initializeNaverLogin() {\n      if (!window.naver) {\n        console.error(\"Naver SDK가 로드되지 않았습니다.\");\n        return;\n      }\n      this.naverLogin = new window.naver.LoginWithNaverId({\n        clientId: \"CoFMDuiNQCSt4spL8LEA\",\n        callbackUrl: \"http://localhost:8080/naverlogin\",\n        isPopup: false,\n        loginButton: {\n          color: \"green\",\n          type: 3,\n          height: 60\n        }\n      });\n      this.naverLogin.init();\n      this.checkLoginStatus();\n    },\n    checkLoginStatus() {\n      if (!this.naverLogin) return;\n      this.naverLogin.getLoginStatus(status => {\n        if (status) {\n          this.isLoggedIn = true;\n          console.log(\"로그인 성공, 사용자 정보:\", this.naverLogin.user);\n          const email = this.naverLogin.user.getEmail();\n          if (!email) {\n            alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\n            this.naverLogin.reprompt();\n            return;\n          }\n        } else {\n          console.log(\"로그인 상태 확인 실패 또는 미로그인\");\n          this.isLoggedIn = false;\n        }\n      });\n    },\n    checkCallback() {\n      if (window.location.pathname === \"/naverlogin\") {\n        console.log(\"콜백 URL 감지, 상태 확인 중...\");\n        this.checkLoginStatus();\n        // URL 정리 (로그인 성공 후)\n        setTimeout(() => {\n          if (this.isLoggedIn) {\n            window.history.pushState({}, document.title, \"/\");\n          }\n        }, 1000); // 상태 확인 후 1초 대기\n      }\n    },\n    logout() {\n      if (!this.naverLogin || !this.naverLogin.accessToken || !this.naverLogin.accessToken.accessToken) {\n        console.log(\"로그아웃할 액세스 토큰이 없습니다.\");\n        this.isLoggedIn = false;\n        return;\n      }\n      const accessToken = this.naverLogin.accessToken.accessToken;\n      const url = `https://nid.naver.com/oauth2.0/token?grant_type=delete&client_id=CoFMDuiNQCSt4spL8LEA&client_secret=YOUR_ACTUAL_CLIENT_SECRET&access_token=${accessToken}&service_provider=NAVER`;\n      axios.get(url).then(res => {\n        console.log(\"로그아웃 성공:\", res.data);\n        this.isLoggedIn = false;\n        this.naverLogin.logout();\n      }).catch(error => {\n        console.error(\"로그아웃 실패:\", error.response ? error.response.data : error.message);\n        this.isLoggedIn = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","naverLogin","isLoggedIn","mounted","initializeNaverLogin","checkCallback","methods","window","naver","console","error","LoginWithNaverId","clientId","callbackUrl","isPopup","loginButton","color","type","height","init","checkLoginStatus","getLoginStatus","status","log","user","email","getEmail","alert","reprompt","location","pathname","setTimeout","history","pushState","document","title","logout","accessToken","url","get","then","res","catch","response","message"],"sources":["C:\\Users\\cau\\Desktop\\Workspace\\vue\\vue-project\\src\\views\\NaverLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"naverIdLogin\"></div>\r\n    <button type=\"button\" @click=\"logout\" v-if=\"isLoggedIn\">로그아웃</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      naverLogin: null,\r\n      isLoggedIn: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initializeNaverLogin();\r\n    this.checkCallback();\r\n  },\r\n  methods: {\r\n    initializeNaverLogin() {\r\n      if (!window.naver) {\r\n        console.error(\"Naver SDK가 로드되지 않았습니다.\");\r\n        return;\r\n      }\r\n\r\n      this.naverLogin = new window.naver.LoginWithNaverId({\r\n        clientId: \"CoFMDuiNQCSt4spL8LEA\",\r\n        callbackUrl: \"http://localhost:8080/naverlogin\",\r\n        isPopup: false,\r\n        loginButton: { color: \"green\", type: 3, height: 60 },\r\n      });\r\n\r\n      this.naverLogin.init();\r\n      this.checkLoginStatus();\r\n    },\r\n    checkLoginStatus() {\r\n      if (!this.naverLogin) return;\r\n\r\n      this.naverLogin.getLoginStatus((status) => {\r\n        if (status) {\r\n          this.isLoggedIn = true;\r\n          console.log(\"로그인 성공, 사용자 정보:\", this.naverLogin.user);\r\n          const email = this.naverLogin.user.getEmail();\r\n          if (!email) {\r\n            alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          }\r\n        } else {\r\n          console.log(\"로그인 상태 확인 실패 또는 미로그인\");\r\n          this.isLoggedIn = false;\r\n        }\r\n      });\r\n    },\r\n    checkCallback() {\r\n      if (window.location.pathname === \"/naverlogin\") {\r\n        console.log(\"콜백 URL 감지, 상태 확인 중...\");\r\n        this.checkLoginStatus();\r\n        // URL 정리 (로그인 성공 후)\r\n        setTimeout(() => {\r\n          if (this.isLoggedIn) {\r\n            window.history.pushState({}, document.title, \"/\");\r\n          }\r\n        }, 1000); // 상태 확인 후 1초 대기\r\n      }\r\n    },\r\n    logout() {\r\n      if (\r\n        !this.naverLogin ||\r\n        !this.naverLogin.accessToken ||\r\n        !this.naverLogin.accessToken.accessToken\r\n      ) {\r\n        console.log(\"로그아웃할 액세스 토큰이 없습니다.\");\r\n        this.isLoggedIn = false;\r\n        return;\r\n      }\r\n\r\n      const accessToken = this.naverLogin.accessToken.accessToken;\r\n      const url = `https://nid.naver.com/oauth2.0/token?grant_type=delete&client_id=CoFMDuiNQCSt4spL8LEA&client_secret=YOUR_ACTUAL_CLIENT_SECRET&access_token=${accessToken}&service_provider=NAVER`;\r\n\r\n      axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log(\"로그아웃 성공:\", res.data);\r\n          this.isLoggedIn = false;\r\n          this.naverLogin.logout();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            \"로그아웃 실패:\",\r\n            error.response ? error.response.data : error.message\r\n          );\r\n          this.isLoggedIn = false;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}