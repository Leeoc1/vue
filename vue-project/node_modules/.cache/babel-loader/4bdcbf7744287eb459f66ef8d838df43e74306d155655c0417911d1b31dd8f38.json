{"ast":null,"code":"export default {\n  mounted() {\n    // Google SDK 로드 확인\n    if (window.gapi) {\n      this.loadGoogleSignIn();\n    } else {\n      // SDK가 로드될 때까지 대기\n      window.addEventListener(\"load\", this.loadGoogleSignIn);\n    }\n  },\n  methods: {\n    loadGoogleSignIn() {\n      // gapi.auth2 초기화\n      window.gapi.load(\"auth2\", () => {\n        window.gapi.auth2.init({\n          client_id: \"YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com\" // 클라이언트 ID 입력\n        }).then(() => {\n          // 버튼 렌더링\n          window.gapi.signin2.render(\"google-signin-btn\", {\n            scope: \"profile email\",\n            // 요청할 scope\n            width: 240,\n            height: 50,\n            longtitle: true,\n            theme: \"dark\",\n            onsuccess: this.onSignIn,\n            onfailure: this.onSignInFailure\n          });\n        }).catch(error => {\n          console.error(\"Google Auth 초기화 실패:\", error);\n        });\n      });\n    },\n    onSignIn(googleUser) {\n      const profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId());\n      console.log(\"Full Name: \" + profile.getName());\n      console.log(\"Given Name: \" + profile.getGivenName());\n      console.log(\"Family Name: \" + profile.getFamilyName());\n      console.log(\"Image URL: \" + profile.getImageUrl());\n      console.log(\"Email: \" + profile.getEmail());\n      const id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n    },\n    onSignInFailure(error) {\n      console.error(\"로그인 실패:\", error);\n    },\n    signOut() {\n      const auth2 = window.gapi.auth2.getAuthInstance();\n      if (auth2) {\n        auth2.signOut().then(() => {\n          console.log(\"로그아웃 완료\");\n        });\n        auth2.disconnect();\n      }\n    }\n  }\n};","map":{"version":3,"names":["mounted","window","gapi","loadGoogleSignIn","addEventListener","methods","load","auth2","init","client_id","then","signin2","render","scope","width","height","longtitle","theme","onsuccess","onSignIn","onfailure","onSignInFailure","catch","error","console","googleUser","profile","getBasicProfile","log","getId","getName","getGivenName","getFamilyName","getImageUrl","getEmail","id_token","getAuthResponse","signOut","getAuthInstance","disconnect"],"sources":["C:\\Users\\cau\\Desktop\\Workspace\\vue\\vue-project\\src\\views\\GoogleLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"google-signin-btn\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    // Google SDK 로드 확인\r\n    if (window.gapi) {\r\n      this.loadGoogleSignIn();\r\n    } else {\r\n      // SDK가 로드될 때까지 대기\r\n      window.addEventListener(\"load\", this.loadGoogleSignIn);\r\n    }\r\n  },\r\n  methods: {\r\n    loadGoogleSignIn() {\r\n      // gapi.auth2 초기화\r\n      window.gapi.load(\"auth2\", () => {\r\n        window.gapi.auth2\r\n          .init({\r\n            client_id: \"YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com\", // 클라이언트 ID 입력\r\n          })\r\n          .then(() => {\r\n            // 버튼 렌더링\r\n            window.gapi.signin2.render(\"google-signin-btn\", {\r\n              scope: \"profile email\", // 요청할 scope\r\n              width: 240,\r\n              height: 50,\r\n              longtitle: true,\r\n              theme: \"dark\",\r\n              onsuccess: this.onSignIn,\r\n              onfailure: this.onSignInFailure,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Google Auth 초기화 실패:\", error);\r\n          });\r\n      });\r\n    },\r\n    onSignIn(googleUser) {\r\n      const profile = googleUser.getBasicProfile();\r\n      console.log(\"ID: \" + profile.getId());\r\n      console.log(\"Full Name: \" + profile.getName());\r\n      console.log(\"Given Name: \" + profile.getGivenName());\r\n      console.log(\"Family Name: \" + profile.getFamilyName());\r\n      console.log(\"Image URL: \" + profile.getImageUrl());\r\n      console.log(\"Email: \" + profile.getEmail());\r\n\r\n      const id_token = googleUser.getAuthResponse().id_token;\r\n      console.log(\"ID Token: \" + id_token);\r\n    },\r\n    onSignInFailure(error) {\r\n      console.error(\"로그인 실패:\", error);\r\n    },\r\n    signOut() {\r\n      const auth2 = window.gapi.auth2.getAuthInstance();\r\n      if (auth2) {\r\n        auth2.signOut().then(() => {\r\n          console.log(\"로그아웃 완료\");\r\n        });\r\n        auth2.disconnect();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAOA,eAAe;EACbA,OAAOA,CAAA,EAAG;IACR;IACA,IAAIC,MAAM,CAACC,IAAI,EAAE;MACf,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACzB,OAAO;MACL;MACAF,MAAM,CAACG,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACD,gBAAgB,CAAC;IACxD;EACF,CAAC;EACDE,OAAO,EAAE;IACPF,gBAAgBA,CAAA,EAAG;MACjB;MACAF,MAAM,CAACC,IAAI,CAACI,IAAI,CAAC,OAAO,EAAE,MAAM;QAC9BL,MAAM,CAACC,IAAI,CAACK,KAAI,CACbC,IAAI,CAAC;UACJC,SAAS,EAAE,kDAAkD,CAAE;QACjE,CAAC,EACAC,IAAI,CAAC,MAAM;UACV;UACAT,MAAM,CAACC,IAAI,CAACS,OAAO,CAACC,MAAM,CAAC,mBAAmB,EAAE;YAC9CC,KAAK,EAAE,eAAe;YAAE;YACxBC,KAAK,EAAE,GAAG;YACVC,MAAM,EAAE,EAAE;YACVC,SAAS,EAAE,IAAI;YACfC,KAAK,EAAE,MAAM;YACbC,SAAS,EAAE,IAAI,CAACC,QAAQ;YACxBC,SAAS,EAAE,IAAI,CAACC;UAClB,CAAC,CAAC;QACJ,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IACDJ,QAAQA,CAACM,UAAU,EAAE;MACnB,MAAMC,OAAM,GAAID,UAAU,CAACE,eAAe,CAAC,CAAC;MAC5CH,OAAO,CAACI,GAAG,CAAC,MAAK,GAAIF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;MACrCL,OAAO,CAACI,GAAG,CAAC,aAAY,GAAIF,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC;MAC9CN,OAAO,CAACI,GAAG,CAAC,cAAa,GAAIF,OAAO,CAACK,YAAY,CAAC,CAAC,CAAC;MACpDP,OAAO,CAACI,GAAG,CAAC,eAAc,GAAIF,OAAO,CAACM,aAAa,CAAC,CAAC,CAAC;MACtDR,OAAO,CAACI,GAAG,CAAC,aAAY,GAAIF,OAAO,CAACO,WAAW,CAAC,CAAC,CAAC;MAClDT,OAAO,CAACI,GAAG,CAAC,SAAQ,GAAIF,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAC;MAE3C,MAAMC,QAAO,GAAIV,UAAU,CAACW,eAAe,CAAC,CAAC,CAACD,QAAQ;MACtDX,OAAO,CAACI,GAAG,CAAC,YAAW,GAAIO,QAAQ,CAAC;IACtC,CAAC;IACDd,eAAeA,CAACE,KAAK,EAAE;MACrBC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC,CAAC;IACDc,OAAOA,CAAA,EAAG;MACR,MAAM9B,KAAI,GAAIN,MAAM,CAACC,IAAI,CAACK,KAAK,CAAC+B,eAAe,CAAC,CAAC;MACjD,IAAI/B,KAAK,EAAE;QACTA,KAAK,CAAC8B,OAAO,CAAC,CAAC,CAAC3B,IAAI,CAAC,MAAM;UACzBc,OAAO,CAACI,GAAG,CAAC,SAAS,CAAC;QACxB,CAAC,CAAC;QACFrB,KAAK,CAACgC,UAAU,CAAC,CAAC;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}