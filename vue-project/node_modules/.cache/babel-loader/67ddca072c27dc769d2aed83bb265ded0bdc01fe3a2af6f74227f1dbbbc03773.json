{"ast":null,"code":"export default {\n  mounted() {\n    this.initializeGoogleSignIn();\n  },\n  methods: {\n    initializeGoogleSignIn() {\n      console.log(\"initializeGoogleSignIn 시작\");\n      if (window.googleLoaded && window.gapi) {\n        this.loadGoogleSignIn();\n      } else {\n        console.log(\"Google SDK 로드 대기 중...\");\n        window.addEventListener(\"load\", this.loadGoogleSignIn);\n      }\n    },\n    loadGoogleSignIn() {\n      console.log(\"loadGoogleSignIn 호출됨\");\n      window.gapi.load(\"signin2\", () => {\n        console.log(\"signin2 로드 완료\");\n        try {\n          window.gapi.signin2.render(\"google-signin-btn\", {\n            scope: \"profile email\",\n            width: 240,\n            height: 50,\n            longtitle: true,\n            theme: \"dark\",\n            onsuccess: this.onSignIn,\n            onfailure: this.onSignInFailure\n          });\n          console.log(\"버튼 렌더링 완료\");\n        } catch (error) {\n          console.error(\"버튼 렌더링 실패:\", error);\n        }\n      });\n    },\n    onSignIn(googleUser) {\n      console.log(\"로그인 성공\");\n      const profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId());\n      console.log(\"Full Name: \" + profile.getName());\n      console.log(\"Given Name: \" + profile.getGivenName());\n      console.log(\"Family Name: \" + profile.getFamilyName());\n      console.log(\"Image URL: \" + profile.getImageUrl());\n      console.log(\"Email: \" + profile.getEmail());\n      const id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n    },\n    onSignInFailure(error) {\n      console.error(\"로그인 실패:\", error);\n      console.log(\"실패 상세:\", JSON.stringify(error, null, 2));\n    },\n    signOut() {\n      const auth2 = window.gapi.auth2?.getAuthInstance();\n      if (auth2) {\n        auth2.signOut().then(() => {\n          console.log(\"로그아웃 완료\");\n        });\n        auth2.disconnect();\n      } else {\n        console.error(\"Google Auth 인스턴스가 없습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["mounted","initializeGoogleSignIn","methods","console","log","window","googleLoaded","gapi","loadGoogleSignIn","addEventListener","load","signin2","render","scope","width","height","longtitle","theme","onsuccess","onSignIn","onfailure","onSignInFailure","error","googleUser","profile","getBasicProfile","getId","getName","getGivenName","getFamilyName","getImageUrl","getEmail","id_token","getAuthResponse","JSON","stringify","signOut","auth2","getAuthInstance","then","disconnect"],"sources":["C:\\Users\\cau\\Desktop\\Workspace\\vue\\vue-project\\src\\views\\GoogleLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"google-signin-btn\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    this.initializeGoogleSignIn();\r\n  },\r\n  methods: {\r\n    initializeGoogleSignIn() {\r\n      console.log(\"initializeGoogleSignIn 시작\");\r\n      if (window.googleLoaded && window.gapi) {\r\n        this.loadGoogleSignIn();\r\n      } else {\r\n        console.log(\"Google SDK 로드 대기 중...\");\r\n        window.addEventListener(\"load\", this.loadGoogleSignIn);\r\n      }\r\n    },\r\n    loadGoogleSignIn() {\r\n      console.log(\"loadGoogleSignIn 호출됨\");\r\n      window.gapi.load(\"signin2\", () => {\r\n        console.log(\"signin2 로드 완료\");\r\n        try {\r\n          window.gapi.signin2.render(\"google-signin-btn\", {\r\n            scope: \"profile email\",\r\n            width: 240,\r\n            height: 50,\r\n            longtitle: true,\r\n            theme: \"dark\",\r\n            onsuccess: this.onSignIn,\r\n            onfailure: this.onSignInFailure,\r\n          });\r\n          console.log(\"버튼 렌더링 완료\");\r\n        } catch (error) {\r\n          console.error(\"버튼 렌더링 실패:\", error);\r\n        }\r\n      });\r\n    },\r\n    onSignIn(googleUser) {\r\n      console.log(\"로그인 성공\");\r\n      const profile = googleUser.getBasicProfile();\r\n      console.log(\"ID: \" + profile.getId());\r\n      console.log(\"Full Name: \" + profile.getName());\r\n      console.log(\"Given Name: \" + profile.getGivenName());\r\n      console.log(\"Family Name: \" + profile.getFamilyName());\r\n      console.log(\"Image URL: \" + profile.getImageUrl());\r\n      console.log(\"Email: \" + profile.getEmail());\r\n\r\n      const id_token = googleUser.getAuthResponse().id_token;\r\n      console.log(\"ID Token: \" + id_token);\r\n    },\r\n    onSignInFailure(error) {\r\n      console.error(\"로그인 실패:\", error);\r\n      console.log(\"실패 상세:\", JSON.stringify(error, null, 2));\r\n    },\r\n    signOut() {\r\n      const auth2 = window.gapi.auth2?.getAuthInstance();\r\n      if (auth2) {\r\n        auth2.signOut().then(() => {\r\n          console.log(\"로그아웃 완료\");\r\n        });\r\n        auth2.disconnect();\r\n      } else {\r\n        console.error(\"Google Auth 인스턴스가 없습니다.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#google-signin-btn {\r\n  display: block;\r\n  min-height: 50px;\r\n  margin: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}