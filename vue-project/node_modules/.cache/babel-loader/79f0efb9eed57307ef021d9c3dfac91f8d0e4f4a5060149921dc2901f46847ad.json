{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    id: \"naverIdLogin\"\n  }, null, -1 /* HOISTED */)), $data.isLoggedIn ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","id","$data","isLoggedIn","key","type","onClick","_cache","args","$options","logout","_createCommentVNode"],"sources":["C:\\Users\\cau\\Desktop\\Workspace\\vue\\vue-project\\src\\views\\NaverLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"naverIdLogin\"></div>\r\n    <button type=\"button\" @click=\"logout\" v-if=\"isLoggedIn\">로그아웃</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      naverLogin: null,\r\n      isLoggedIn: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initializeNaverLogin();\r\n    this.checkCallback(); // 콜백 URL 감지 및 처리\r\n  },\r\n  methods: {\r\n    initializeNaverLogin() {\r\n      if (!window.naver) {\r\n        console.error(\"Naver SDK가 로드되지 않았습니다.\");\r\n        return;\r\n      }\r\n\r\n      this.naverLogin = new window.naver.LoginWithNaverId({\r\n        clientId: \"CoFMDuiNQCSt4spL8LEA\",\r\n        callbackUrl: \"http://localhost:8080/naverlogin\",\r\n        isPopup: false,\r\n        loginButton: { color: \"green\", type: 3, height: 60 },\r\n      });\r\n\r\n      this.naverLogin.init();\r\n\r\n      // 초기 상태 확인\r\n      this.checkLoginStatus();\r\n    },\r\n    checkLoginStatus() {\r\n      if (!this.naverLogin) return;\r\n\r\n      this.naverLogin.getLoginStatus((status) => {\r\n        if (status) {\r\n          this.isLoggedIn = true;\r\n          console.log(\"로그인 성공, 사용자 정보:\", this.naverLogin.user);\r\n          const email = this.naverLogin.user.getEmail();\r\n          if (!email) {\r\n            alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\r\n            this.naverLogin.reprompt();\r\n            return;\r\n          }\r\n          // 콜백 URL에서 돌아온 경우, URL 정리\r\n          if (window.location.pathname === \"/naverlogin\") {\r\n            window.history.pushState({}, document.title, \"/\"); // URL을 \"/\"로 변경\r\n          }\r\n        } else {\r\n          console.log(\"로그인 상태 확인 실패 또는 미로그인\");\r\n          this.isLoggedIn = false;\r\n        }\r\n      });\r\n    },\r\n    checkCallback() {\r\n      // 콜백 URL인지 확인\r\n      if (window.location.pathname === \"/naverlogin\") {\r\n        console.log(\"콜백 URL 감지, 상태 확인 중...\");\r\n        this.checkLoginStatus();\r\n      }\r\n    },\r\n    logout() {\r\n      if (\r\n        !this.naverLogin ||\r\n        !this.naverLogin.accessToken ||\r\n        !this.naverLogin.accessToken.accessToken\r\n      ) {\r\n        console.log(\"로그아웃할 액세스 토큰이 없습니다.\");\r\n        this.isLoggedIn = false;\r\n        return;\r\n      }\r\n\r\n      const accessToken = this.naverLogin.accessToken.accessToken;\r\n      const url = `https://nid.naver.com/oauth2.0/token?grant_type=delete&client_id=CoFMDuiNQCSt4spL8LEA&client_secret=L9EtVHP1Rn&access_token=${accessToken}&service_provider=NAVER`;\r\n\r\n      axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log(\"로그아웃 성공:\", res.data);\r\n          this.isLoggedIn = false;\r\n          this.naverLogin.logout(); // 클라이언트 측 로그아웃\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            \"로그아웃 실패:\",\r\n            error.response ? error.response.data : error.message\r\n          );\r\n          this.isLoggedIn = false; // 실패해도 상태 업데이트\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAGM,c,0BAFJC,mBAAA,CAA6B;IAAxBC,EAAE,EAAC;EAAc,6BACsBC,KAAA,CAAAC,UAAU,I,cAAtDJ,mBAAA,CAAqE;IAHzEK,GAAA;IAGYC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAoB,MAAI,KAHhEG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}